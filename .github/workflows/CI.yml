name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        settings:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
          - target: aarch64-apple-darwin
            os: macos-latest
      fail-fast: false
    runs-on: ${{ matrix.settings.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}
      - name: print cpu features
        run: |
          rustup toolchain install nightly
          cargo +nightly run -p cpu-features --features nightly
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Download fixtures
        run: node download-fixtures.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        run: cargo test

  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
          components: miri
          toolchain: nightly
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Download fixtures
        run: node download-fixtures.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run miri
        run: cargo miri test
        env:
          MIRIFLAGS: "-Zmiri-disable-isolation"
  bench:
    strategy:
      matrix:
        settings:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-11-arm
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
          - target: aarch64-apple-darwin
            os: macos-latest
      fail-fast: false
    runs-on: ${{ matrix.settings.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Download fixtures
        run: node download-fixtures.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run benchmarks
        run: cargo bench
        env:
          RUSTFLAGS: '-C target-cpu=native'